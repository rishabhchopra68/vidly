{"version":3,"sources":["reportWebVitals.js","services/logService.js","services/httpService.js","services/movieService.js","services/genreService.js","components/common/pagination.jsx","utils/paginate.js","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","services/authService.js","components/moviesTable.jsx","components/common/listGroup.jsx","components/common/searchBox.jsx","components/movies.jsx","components/customers.jsx","components/rentals.jsx","components/notfound.jsx","components/navbar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/newMovieForm.jsx","components/common/logout.jsx","components/common/protectedRoute.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","success","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","apiEndPoint","movieUrl","movieId","getMovie","http","deleteMovie","saveMovie","movie","_id","body","getGenres","Pagination","itemCount","pageSize","currPage","onPageChange","numberOfPages","pages","_","range","className","map","page","onClick","paginate","movies","currentPage","startIndex","slice","take","value","Like","props","classes","liked","style","cursor","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","undefined","columns","this","label","key","Component","TableBody","renderCell","item","content","createKey","data","Table","tokenKey","email","password","a","localStorage","setItem","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","MoviesTable","state","Link","to","title","onLike","user","auth","isAdmin","addDeleteColumn","push","onDelete","ListGroup","genres","textProperty","valueProperty","selectedItem","onGenreSelect","genre","name","defaultProps","SearchBox","onChange","type","placeholder","e","currentTarget","Movies","selectedGenre","searchQuery","handlePageChange","setState","handleLike","index","indexOf","handleDelete","originalMovies","filter","mov","handleGenreSelect","handleSort","handleSearch","query","getPagedData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","marginBottom","Customers","Rentals","NotFound","Navbar","id","NavLink","Fragment","Input","rest","htmlFor","Select","options","option","Form","errors","validateProperty","schema","obj","Joi","validate","details","message","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","renderButton","disabled","renderSelect","renderInput","abortEarly","LoginForm","username","React","createRef","string","required","location","window","from","pathname","Redirect","onSubmit","register","RegisterForm","min","userService","NewMovieForm","genreId","numberInStock","dailyRentalRate","number","max","history","match","params","mapToViewModel","replace","populateGenres","populateMovie","Logout","ProtectedRoute","component","render","App","Switch","Route","exact","ReactDOM","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.db442afb.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","function init() {}\r\n\r\nfunction log(error) {\r\n  console.error(error);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log,\r\n};\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport logger from \"./logService\";\r\n// import auth from \"./authService\";\r\n// called everytime we use axios even for success which is the first prop\r\n\r\n// setting header on all types of http requests\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL; // this will change according to env\r\n\r\naxios.interceptors.response.use(\r\n  (success) => {\r\n    console.log(\"Hurray !!!\");\r\n    return success;\r\n  },\r\n  (error) => {\r\n    // handle for unexpected errors here\r\n\r\n    const expectedError =\r\n      error.response &&\r\n      error.response.status >= 400 &&\r\n      error.response.status < 500;\r\n\r\n    if (!expectedError) {\r\n      logger.log(error);\r\n      toast(\"An unexpected error occured \");\r\n    }\r\n    return Promise.reject(error); // to send control to catch block\r\n  }\r\n);\r\n\r\nfunction setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt,\r\n};\r\n","// import axios from \"\";\r\n// import { apiUrl } from \"../config.json\";\r\nimport http from \"../services/httpService\";\r\n// import { saveMovie } from \"./fakeMovieService\";\r\n\r\nconst apiEndPoint = \"/movies\";\r\n\r\nfunction movieUrl(movieId) {\r\n  return `${apiEndPoint}/${movieId}`;\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport function getMovies() {\r\n  return http.get(apiEndPoint);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  return http.delete(movieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  // if movie exists\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n    delete body._id; // restful api doesnt want id parameter\r\n    return http.put(movieUrl(movie._id), body);\r\n  }\r\n  return http.post(apiEndPoint, movie);\r\n}\r\n","import axios from \"axios\";\r\n// import { apiUrl } from \"../config.json\";\r\nimport http from \"./httpService\";\r\n\r\nconst apiEndPoint = \"/genres\";\r\nexport function getGenres() {\r\n  return http.get(apiEndPoint);\r\n}\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pagination = ({ itemCount, pageSize, currPage, onPageChange }) => {\r\n  // const  = props;\r\n  const numberOfPages = itemCount / pageSize;\r\n\r\n  // console.log(Math.ceil(numberOfPages));\r\n\r\n  const pages = _.range(1, numberOfPages + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li\r\n            className={currPage === page ? \"page-item active\" : \"page-item\"}\r\n            key={page}\r\n          >\r\n            <button className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  // to validate the props sent\r\n  itemCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(movies, currentPage, pageSize) {\r\n  const startIndex = (currentPage - 1) * pageSize;\r\n\r\n  return _(movies).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from \"react\";\r\n\r\nconst Like = (props) => {\r\n  let classes = \"fa fa-heart\";\r\n  if (!props.liked) classes += \"-o\";\r\n\r\n  return (\r\n    <i\r\n      onClick={props.onClick}\r\n      style={{ cursor: \"pointer\" }}\r\n      className={classes}\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n\r\n// interface includes : columns , sortmethod ,\r\nclass TableHeader extends Component {\r\n  raiseSort = (path) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path) {\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n  renderSortIcon = (column) => {\r\n    const { sortColumn } = this.props;\r\n    // console.log(column.path);\r\n\r\n    if (column.path === undefined) return null;\r\n    if (column.path !== sortColumn.path) return null;\r\n\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\r\n    return <i className=\"fa fa-sort-desc\" />;\r\n  };\r\n  render() {\r\n    // console.log(this.props);\r\n\r\n    const { columns } = this.props;\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {columns.map((column) => (\r\n            <th\r\n              className=\"clickable\"\r\n              onClick={() => this.raiseSort(column.path)}\r\n              key={column.path || column.key}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n\r\n    return _.get(item, column.path);\r\n  };\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr key={item._id}>\r\n            {columns.map((column) => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\n\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ columns, onSort, sortColumn, data }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} onSort={onSort} sortColumn={sortColumn} />\r\n      <TableBody data={data} columns={columns} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","// import { apiUrl } from \"../config.json\";\r\nimport http from \"../services/httpService\";\r\nimport jwtDecode from \"jwt-decode\";\r\nconst apiEndPoint = \"/auth\";\r\n\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndPoint, { email, password });\r\n\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (error) {\r\n    // if no user is logged in\r\n    return null;\r\n  }\r\n}\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n  login,\r\n  loginWithJwt,\r\n  logout,\r\n  getCurrentUser,\r\n  getJwt,\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport auth from \"../services/authService\";\r\nclass MoviesTable extends Component {\r\n  state = {};\r\n  columns = [\r\n    {\r\n      label: \"Title\",\r\n      path: \"title\",\r\n      content: (movie) => (\r\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n      ),\r\n    },\r\n    { label: \"Genre\", path: \"genre.name\" },\r\n    { label: \"Stock\", path: \"numberInStock\" },\r\n    { label: \"Rate\", path: \"dailyRentalRate\" },\r\n    {\r\n      key: \"like\",\r\n      content: (movie) => (\r\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n      ),\r\n    },\r\n  ];\r\n  addDeleteColumn() {\r\n    this.columns.push({\r\n      key: \"delete\",\r\n      content: (movie) => (\r\n        <button\r\n          className=\"btn btn-danger\"\r\n          onClick={() => this.props.onDelete(movie)}\r\n        >\r\n          Delete\r\n        </button>\r\n      ),\r\n    });\r\n  }\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin) {\r\n      this.addDeleteColumn();\r\n    }\r\n  }\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={movies}\r\n        onSort={onSort}\r\n        sortColumn={sortColumn}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\n\r\nconst ListGroup = ({\r\n  genres,\r\n  textProperty,\r\n  valueProperty,\r\n  selectedItem,\r\n  onGenreSelect,\r\n}) => {\r\n  //   const genres = props.genres;\r\n  //   console.log(genres);\r\n\r\n  //   console.log(textProperty, valueProperty);\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {genres.map((genre) => (\r\n        <li\r\n          key={genre[valueProperty] || genre.name} // check this line\r\n          style={{ cursor: \"pointer\" }}\r\n          className={\r\n            genre === selectedItem\r\n              ? \"list-group-item active\"\r\n              : \"list-group-item\"\r\n          }\r\n          onClick={() => {\r\n            onGenreSelect(genre);\r\n          }}\r\n        >\r\n          {genre[textProperty]}\r\n        </li>\r\n      ))}\r\n      {/* <li className=\"list-group-item\">Cras justo odio</li>\r\n      <li className=\"list-group-item\">Dapibus ac facilisis in</li>\r\n      <li className=\"list-group-item\">Morbi leo risus</li>\r\n      <li className=\"list-group-item\">Porta ac consectetur ac</li>\r\n      <li className=\"list-group-item\">Vestibulum at eros</li> */}\r\n    </ul>\r\n  );\r\n};\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\", // to make our listGroup component more flexible\r\n  valueProperty: \"_id\", // also , setting default props for this component so that we dont need to send too many props from parent\r\n};\r\nexport default ListGroup;\r\n","import React, { Component } from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      value={value}\r\n      placeholder=\"Search ...\"\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n    ></input>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\n\r\nimport Pagination from \"./common/pagination\";\r\n\r\nimport { paginate } from \"../utils/paginate\";\r\n// import \"react-table/dist/react-table.css\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    pageSize: 4,\r\n    currPage: 1,\r\n    selectedGenre: null,\r\n    searchQuery: \"\",\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n  };\r\n  async componentDidMount() {\r\n    const { data: movies } = await getMovies();\r\n\r\n    const { data } = await getGenres();\r\n    const genres = [{ _id: \"\", name: \"All genres\" }, ...data];\r\n    this.setState({ genres, movies });\r\n  }\r\n  handlePageChange = (page) => {\r\n    this.setState({ currPage: page });\r\n  };\r\n\r\n  handleLike = (movie) => {\r\n    // const curr = movie.liked ? false : true;\r\n    const movies = [...this.state.movies];\r\n\r\n    const index = movies.indexOf(movie);\r\n\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n\r\n    this.setState({ movies: movies });\r\n  };\r\n  handleDelete = async (movie) => {\r\n    // return <h1>hello</h1>;\r\n    const originalMovies = this.state.movies;\r\n\r\n    const movies = originalMovies.filter((mov) => mov._id !== movie._id);\r\n\r\n    this.setState({ movies });\r\n\r\n    try {\r\n      await deleteMovie(movie._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast.error(\"This movie has already been deleted\");\r\n\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n    // console.log(movie);\r\n  };\r\n  handleGenreSelect = (genre) => {\r\n    // const movies = this.state.movies;\r\n\r\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currPage: 1 });\r\n    // console.log(genre);\r\n  };\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n  handleSearch = (query) => {\r\n    this.setState({ selectedGenre: null, searchQuery: query, currPage: 1 });\r\n  };\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currPage,\r\n      movies: allMovies,\r\n      selectedGenre,\r\n      sortColumn,\r\n      searchQuery,\r\n    } = this.state;\r\n\r\n    let filtered = allMovies;\r\n    if (searchQuery) {\r\n      filtered = allMovies.filter((movie) =>\r\n        movie.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else if (selectedGenre && selectedGenre._id) {\r\n      filtered = allMovies.filter(\r\n        (movie) => movie.genre._id === selectedGenre._id\r\n      );\r\n    }\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], sortColumn.order);\r\n    const movies = paginate(sorted, currPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n  render() {\r\n    const {\r\n      pageSize,\r\n      currPage,\r\n      movies: allMovies,\r\n      selectedGenre,\r\n      sortColumn,\r\n    } = this.state;\r\n\r\n    const { user } = this.props;\r\n\r\n    if (allMovies.length === 0)\r\n      return <p>There are no movies in the database</p>;\r\n\r\n    const { totalCount, data: movies } = this.getPagedData();\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-3\">\r\n            <ListGroup\r\n              genres={this.state.genres}\r\n              onGenreSelect={this.handleGenreSelect}\r\n              selectedItem={selectedGenre}\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            {user && (\r\n              <Link\r\n                to=\"/movies/new\"\r\n                className=\"btn btn-primary\"\r\n                style={{ marginBottom: 20 }}\r\n              >\r\n                New Movie\r\n              </Link>\r\n            )}\r\n\r\n            <p>Showing {totalCount} movies in the database.</p>\r\n            <SearchBox\r\n              value={this.state.searchQuery}\r\n              onChange={this.handleSearch}\r\n            ></SearchBox>\r\n            <div>\r\n              <MoviesTable\r\n                movies={movies}\r\n                onLike={this.handleLike}\r\n                onDelete={this.handleDelete}\r\n                onSort={this.handleSort}\r\n                sortColumn={sortColumn}\r\n              />\r\n              <Pagination\r\n                itemCount={totalCount}\r\n                pageSize={pageSize}\r\n                onPageChange={this.handlePageChange}\r\n                currPage={currPage}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\n\r\nconst Customers = () => {\r\n  return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h1>RENTALS</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nconst Navbar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Vidly\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavAltMarkup\"\r\n        aria-controls=\"navbarNavAltMarkup\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink className=\"nav-item nav-link\" to=\"/movies\">\r\n            Movies\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/customers\">\r\n            Customers\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\r\n            Rentals\r\n          </NavLink>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/register\">\r\n                Register\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/profile\">\r\n                {user.name}\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/logout\">\r\n                Logout\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  // rest is used so that we dont have to type in new para everytime\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select {...rest} name={name} id={name} className=\"form-control\">\r\n        <option value=\"\"></option>\r\n        {options.map((option) => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n// export default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  //\r\n  state = { data: {}, errors: {} };\r\n\r\n  validate() {\r\n    const options = { abortEarly: false }; // to get all the errors without abortion\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    // console.log(error);\r\n    if (!error) return null;\r\n    const errors = {};\r\n    // map array to errors object\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  }\r\n  validateProperty = ({ name, value }) => {\r\n    const schema = { [name]: this.schema[name] };\r\n    const obj = { [name]: value };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    // const username = this.username.current.value;\r\n    e.preventDefault(); // to prevent full page reload when form is submitted\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n    this.doSubmit();\r\n  };\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) {\r\n      errors[input.name] = errorMessage;\r\n    } else {\r\n      delete errors[input.name];\r\n    }\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n  renderButton = (label) => {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  };\r\n  renderSelect = (name, label, options) => {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        value={data[name]}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  };\r\n  renderInput = (name, label, type = \"text\") => {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        name={name}\r\n        label={label}\r\n        value={data[name]}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n        type={type}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\n\r\nimport auth from \"./../services/authService\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n  username = React.createRef(); // to create a reference to the form input to use it somewhere else\r\n\r\n  schema = {\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      await auth.login(data.username, data.password); // jwt is json web token\r\n\r\n      // after user is logged in\r\n      const { state } = this.props.location;\r\n\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","// import { apiUrl } from \"../config.json\";\r\nimport http from \"../services/httpService\";\r\n\r\nconst apiEndPoint = \"/users\";\r\n\r\nexport function register(user) {\r\n  return http.post(apiEndPoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name,\r\n  });\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\n\r\nimport * as userService from \"../services/userService\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: {\r\n      username: \"\",\r\n      password: \"\",\r\n      name: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n  schema = {\r\n    username: Joi.string().email().required().label(\"Username\"),\r\n    password: Joi.string().required().min(5).label(\"Passowrd\"),\r\n    name: Joi.string().required().label(\"Name\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await userService.register(this.state.data);\r\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\";\r\n      // console.log(response);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n    // console.log(\"Registered\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\", \"email\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { getMovie, saveMovie } from \"../services/movieService\";\r\n\r\nclass NewMovieForm extends Form {\r\n  state = {\r\n    data: { title: \"\", genreId: \"\", numberInStock: \"\", dailyRentalRate: \"\" },\r\n    genres: [],\r\n    errors: {},\r\n  };\r\n  schema = {\r\n    _id: Joi.string(), // ? ? ?\r\n    title: Joi.string().required().label(\"Title\"),\r\n    genreId: Joi.string().required().label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .min(0)\r\n      .max(100)\r\n      .required()\r\n      .label(\"Number In Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .min(0)\r\n      .max(10)\r\n      .required()\r\n      .label(\"Daily Rental Rate\"),\r\n  };\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n    this.props.history.push(\"/movies\");\r\n    console.log(\"Submitted\");\r\n  };\r\n\r\n  async populateGenres() {\r\n    const { data: genres } = await getGenres(); // getting all available genres\r\n    this.setState({ genres });\r\n  }\r\n  async populateMovie() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === \"new\") return; // no need to populate form\r\n      const { data: movie } = await getMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        return this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovie();\r\n  }\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number In Stock\", \"number\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Daily Rental Rate\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewMovieForm;\r\n","import React, { Component } from \"react\";\r\nimport auth from \"../../services/authService\";\r\n\r\n// import Logout from \"./logout\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n    window.location = \"/\"; // to get a full app reload and set location as root of app\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router\";\r\n\r\nimport auth from \"../../services/authService\";\r\n// import { Component } from 'react';\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      path={path}\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!auth.getCurrentUser()) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        }\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport Movies from \"./components/movies\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notfound\";\nimport Navbar from \"./components/navbar\";\n// import MovieForm from \"./components/movieForm\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport NewMovieForm from \"./components/newMovieForm\";\nimport Logout from \"./components/common/logout\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\n\nimport auth from \"./services/authService\";\n\nimport \"./App.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n  state = {};\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n\n    this.setState({ user });\n  }\n  render() {\n    const { user } = this.state;\n    return (\n      <div>\n        <ToastContainer />\n        <Navbar user={user} />\n        <main className=\"container\">\n          <Switch>\n            {/* <Route path=\"/movies/new\" component={NewMovieForm} /> */}\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n\n            {/* we dont want unauth people to access this link */}\n            <ProtectedRoute path=\"/movies/:id\" component={NewMovieForm} />\n            \n            {/* we want to pass user prop to Movies Component */}\n            <Route\n              path=\"/movies\"\n              render={(props) => <Movies {...props} user={this.state.user} />}\n            ></Route>\n            <Route path=\"/customers\" component={Customers}></Route>\n            <Route path=\"/rentals\" component={Rentals}></Route>\n            <Route path=\"/not-found\" component={NotFound}></Route>\n            <Redirect from=\"/\" to=\"/movies\" exact component={Movies} />\n            <Redirect to=\"/not-found\"></Redirect>\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\n// import ReactTable from \"react-table\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconsole.log(process.env);\nReactDOM.render(\n  // to include routes in our app\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}